table Measure
	lineageTag: 4378b528-876e-4c62-9445-64f655f8ad9c

	measure 'Old_Number of Employees' =
			--COUNT(FACT_Employees[Employee ID])
			COUNTROWS(FACT_Employees)
		formatString: #,0
		lineageTag: d97d1d60-b22d-4d81-8f7f-ba307055daa9

	measure 'Old_Working Employees' =
			
			CALCULATE(
			    [Old_Number of Employees],
			    ISBLANK(FACT_Employees[Exit Date]) --|| YEAR(FACT_Employees[Exit Date]) > YEAR(FACT_Employees[Hire Date])
			)
		formatString: 0
		displayFolder: Employees
		lineageTag: 690cdff9-1e18-4f22-b019-e0db2aeccfd7

	measure 'Employees Beginning of 2021' =
			
			CALCULATE(
			    [Old_Number of Employees],
			    --DIM_Date[Date] <= DATE(2021,1,1),
			    FACT_Employees[Hire Date] <= DATE(2021,1,1),
			    FACT_Employees[Exit Date] > DATE(2021,1,1) || ISBLANK(FACT_Employees[Exit Date])
			)
		formatString: 0
		displayFolder: Employees
		lineageTag: 2e8819ea-9dcc-4b4d-ba14-b1de13699187

	measure 'Employees Exit in 2021' =
			
			CALCULATE(
			    [Old_Number of Employees],
			    FACT_Employees[Exit Date] > DATE(2021,1,1),
			    FACT_Employees[Exit Date] <= DATE(2021,12,31)
			)
		formatString: 0
		displayFolder: Employees
		lineageTag: 88d23454-98be-4d4c-9b1b-92102a2afc22

	measure 'Turnover Rate' = ```
			
			VAR AvgEmp =
			    DIVIDE(
			        [Employees Beginning of Period] + [Employees End of Period],
			        2
			    )
			
			VAR Turnover =
			    DIVIDE(
			        [Employees Left in Period],
			        AvgEmp
			    )
			    
			RETURN
			    Turnover
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Retention & Turnover
		lineageTag: 5e89b593-65a7-4be1-b5d4-b44e7726b90d

	measure 'Employees End of 2021' =
			
			CALCULATE(
			    [Old_Number of Employees],
			    FACT_Employees[Hire Date] <= DATE(2021,12,31),
			    FACT_Employees[Exit Date] > DATE(2021,12,31) || ISBLANK(FACT_Employees[Exit Date])
			)
		formatString: 0
		displayFolder: Employees
		lineageTag: cda9eb9e-d119-479c-b70c-7fe1e57c605c

	measure 'Employees Beginning of Period' = ```
			
			VAR MinDate = MIN(DIM_Date[Date])
			VAR NoEmp =
			    CALCULATE(
			        [Old_Number of Employees]
			        ,FACT_Employees[Hire Date] <= MinDate
			        ,FACT_Employees[Exit Date] > MinDate || ISBLANK(FACT_Employees[Exit Date])
			        ,USERELATIONSHIP(
			            FACT_Employees[Exit Date],
			            DIM_Date[Date]
			        )
			        ,ALL(DIM_Date) -- without it the earliest hire or exit dates would lie within the period, but we need to check hire date before and exit date after (row 4-5) and compare to the earliest date of the period MIN(DIM_Date[Date]).
			    )
			VAR ReplaceBlanks =
			    IF(
			        ISBLANK(NoEmp),
			        0,
			        NoEmp
			    )
			RETURN
			   ReplaceBlanks 
			```
		formatString: 0
		displayFolder: Employees
		lineageTag: 42e55a5e-3d19-4d37-ae08-a0139585a1a2

	measure 'Employees End of Period' = ```
			
			VAR MaxDate = MAX(DIM_Date[Date])
			VAR NoEmp =
			    CALCULATE(
			        [Old_Number of Employees],
			        FACT_Employees[Hire Date] <= MaxDate,
			        FACT_Employees[Exit Date] > MaxDate || ISBLANK(FACT_Employees[Exit Date]),
			        USERELATIONSHIP(
			            FACT_Employees[Exit Date],
			            DIM_Date[Date]
			        ), 
			        ALL(DIM_Date) -- without it the earliest hire or exit dates would lie within the period, but we need to check hire date before and exit date after (row 4-5) and compare to the earliest date of the period MIN(DIM_Date[Date]).
			    )
			VAR ReplaceBlanks =
			    IF(
			        ISBLANK(NoEmp),
			        0,
			        NoEmp
			    )
			RETURN
			   ReplaceBlanks 
			```
		formatString: 0
		displayFolder: Employees
		lineageTag: c95385de-64e1-4162-80a4-4632f6c92158

	measure 'Employees Left in Period' =
			
			VAR EmployeesLeft =
			    CALCULATE(
			        [Old_Number of Employees],
			        FACT_Employees[Exit Date] > MIN(DIM_Date[Date]),
			        FACT_Employees[Exit Date] <= MAX(DIM_Date[Date]),
			        USERELATIONSHIP(
			            FACT_Employees[Exit Date],
			            DIM_Date[Date]
			        )
			        --,ALLSELECTED(DIM_Date)
			    )
			
			VAR ReplaceBlanks = -- replace blank with 0 when no employees have left
			    IF(
			        ISBLANK(EmployeesLeft),
			        0,
			        EmployeesLeft
			    )
			
			RETURN ReplaceBlanks
		formatString: 0
		displayFolder: Employees
		lineageTag: 30c0ba20-83fd-4c64-8665-8b229ec35910

	measure 'Average Annual Salary' = ```
			
			// CALCULATE(
			//     AVERAGE(FACT_Employees[Annual Salary]),
			//     ISBLANK(FACT_Employees[Exit Date])
			// )
			--AVERAGE(FACT_Employees[Annual Salary])
			
			VAR MaxDate = MAX(DIM_Date[Date])
			VAR AverageSalaryWorkingEmployees =
			    CALCULATE(
			        AVERAGE(FACT_Employees[Annual Salary]),
			        FACT_Employees[Hire Date] <= MaxDate,
			        FACT_Employees[Exit Date] > MaxDate || ISBLANK(FACT_Employees[Exit Date]),
			        USERELATIONSHIP(
			            FACT_Employees[Exit Date],
			            DIM_Date[Date]
			        ), 
			        ALL(DIM_Date) -- without it the earliest hire or exit dates would lie within the period, but we need to check hire date before and exit date after (row 4-5) and compare to the earliest date of the period MIN(DIM_Date[Date]).
			    )
			RETURN AverageSalaryWorkingEmployees
			
			```
		displayFolder: Salary
		lineageTag: 85ef87ae-7699-4c64-8e08-5c4df9d38372

		annotation __PBI_SemanticLinks = [{"LinkTarget":{"TableName":"DIM_Job Title","TableItemName":"Job Title (clusters)","ObjectType":4},"LinkType":"UsedInGroup"}]

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Median Annual Salary' = ```
			
			// CALCULATE(
			//     MEDIAN(FACT_Employees[Annual Salary]),
			//     ISBLANK(FACT_Employees[Exit Date])
			// )
			--MEDIAN(FACT_Employees[Annual Salary])
			
			VAR MaxDate = MAX(DIM_Date[Date])
			VAR MedianSalaryWorkingEmployees =
			    CALCULATE(
			        MEDIAN(FACT_Employees[Annual Salary]),
			        FACT_Employees[Hire Date] <= MaxDate,
			        FACT_Employees[Exit Date] > MaxDate || ISBLANK(FACT_Employees[Exit Date]),
			        USERELATIONSHIP(
			            FACT_Employees[Exit Date],
			            DIM_Date[Date]
			        ), 
			        ALL(DIM_Date) -- without it the earliest hire or exit dates would lie within the period, but we need to check hire date before and exit date after (row 4-5) and compare to the earliest date of the period MIN(DIM_Date[Date]).
			    )
			RETURN MedianSalaryWorkingEmployees
			```
		formatString: \$#,0;(\$#,0);\$#,0
		displayFolder: Salary
		lineageTag: 13a9887b-99db-460a-a3d2-9ebb1614745d

	measure 'Current Employees % Asian' =
			
			VAR Ethnicity = "Asian"
			VAR MeasureAsian =
			    CALCULATE(
			        --[Old_Working Employees],
			        [Employees End of Period],
			        DIM_Ehtnicity[Ethnicity] = Ethnicity
			    )
			VAR AllEthnicities =
			    CALCULATE(
			        --[Old_Working Employees],
			        [Employees End of Period],
			        ALLSELECTED(DIM_Ehtnicity)
			    )
			VAR ResultPct =
			    DIVIDE(
			        MeasureAsian,
			        AllEthnicities
			    )
			VAR CheckSlicerSelection =
			    IF(
			        Ethnicity IN VALUES(DIM_Ehtnicity[Ethnicity]),
			        ResultPct
			    )
			RETURN
			    CheckSlicerSelection
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Ethnicity
		lineageTag: 9865ebb5-b63a-4df8-8458-b104ea091ddd

	measure 'Current Employees % Caucasian' =
			
			VAR Ethnicity = "Caucasian"
			VAR MeasureCaucasian =
			    CALCULATE(
			        --[Old_Working Employees],
			        [Employees End of Period],
			        DIM_Ehtnicity[Ethnicity] = Ethnicity
			    )
			VAR AllEthnicities =
			    CALCULATE(
			        --[Old_Working Employees],
			        [Employees End of Period],
			        ALLSELECTED(DIM_Ehtnicity)
			    )
			VAR ResultPct =
			    DIVIDE(
			        MeasureCaucasian,
			        AllEthnicities
			    )
			VAR CheckSlicerSelection =
			    IF(
			        Ethnicity IN VALUES(DIM_Ehtnicity[Ethnicity]),
			        ResultPct)
			RETURN
			    CheckSlicerSelection
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Ethnicity
		lineageTag: d4f69a48-ae72-472a-9cd6-259226250683

	measure 'Current Employees % Latino' =
			
			VAR Ethnicity = "Latino"
			VAR MeasureLatino =
			    CALCULATE(
			        --[Old_Working Employees],
			        [Employees End of Period],
			        DIM_Ehtnicity[Ethnicity] = Ethnicity
			    )
			VAR AllEthnicities =
			    CALCULATE(
			        --[Old_Working Employees],
			        [Employees End of Period],
			        ALLSELECTED(DIM_Ehtnicity)
			    )
			VAR ResultPct =
			    DIVIDE(
			        MeasureLatino,
			        AllEthnicities
			    )
			VAR CheckSlicerSelection =
			    IF(
			        Ethnicity IN VALUES(DIM_Ehtnicity[Ethnicity]),
			        ResultPct)
			RETURN
			    CheckSlicerSelection
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Ethnicity
		lineageTag: 3da54513-3f3d-4a7f-9d6a-ce68accf1169

	measure 'Current Employees % Black' =
			
			VAR Ethnicity = "Black"
			VAR MeasureBlack =
			    CALCULATE(
			        --[Old_Working Employees],
			        [Employees End of Period],
			        DIM_Ehtnicity[Ethnicity] = Ethnicity
			    )
			VAR AllEthnicities =
			    CALCULATE(
			        --[Old_Working Employees],
			        [Employees End of Period],
			        ALLSELECTED(DIM_Ehtnicity)
			    )
			VAR ResultPct =
			    DIVIDE(
			        MeasureBlack,
			        AllEthnicities
			    )
			VAR CheckSlicerSelection =
			    IF(
			        Ethnicity IN VALUES(DIM_Ehtnicity[Ethnicity]),
			        ResultPct,
			        BLANK()
			        )
			RETURN
			    CheckSlicerSelection
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Ethnicity
		lineageTag: aa1b941c-42ba-4175-931d-d2007cbd2927

	measure 'Current Employees % USA' =
			
			VAR Country = "United States"
			VAR MeasureUSA =
			    CALCULATE(
			        --[Old_Working Employees],
			        [Employees End of Period],
			        DIM_City[Country] = Country
			    )
			VAR AllCountries =
			    CALCULATE(
			        --[Old_Working Employees],
			        [Employees End of Period],
			        ALLSELECTED(DIM_City)
			    )
			VAR ResultPct =
			    DIVIDE(
			        MeasureUSA,
			        AllCountries
			    )
			VAR CheckSlicerSelection =
			    IF(
			        Country IN VALUES(DIM_City[Country]),
			        ResultPct,
			        BLANK()
			    )
			RETURN
			    CheckSlicerSelection
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Country
		lineageTag: a4154e8f-6c06-4ca1-a8e1-b4a6d6f700d4

	measure 'Current Employees % China' =
			
			VAR Country = "China"
			VAR MeasureChina =
			    CALCULATE(
			        --[Old_Working Employees],
			        [Employees End of Period],
			        DIM_City[Country] = Country
			    )
			VAR AllCountries =
			    CALCULATE(
			        --[Old_Working Employees],
			        [Employees End of Period],
			        ALLSELECTED(DIM_City)
			    )
			VAR ResultPct =
			    DIVIDE(
			        MeasureChina,
			        AllCountries
			    )
			VAR CheckSlicerSelection =
			    IF(
			        Country IN VALUES(DIM_City[Country]),
			        ResultPct,
			        BLANK()
			    )
			RETURN
			    CheckSlicerSelection
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Country
		lineageTag: 0ecf166e-5910-4185-9d2c-8ceb16b8416d

	measure 'Current Employees % Brazil' =
			
			VAR Country = "Brazil"
			VAR MeasureBrazil =
			    CALCULATE(
			        --[Old_Working Employees],
			        [Employees End of Period],
			        DIM_City[Country] = Country
			    )
			VAR AllCountries =
			    CALCULATE(
			        --[Old_Working Employees],
			        [Employees End of Period],
			        ALLSELECTED(DIM_City)
			    )
			VAR ResultPct =
			    DIVIDE(
			        MeasureBrazil,
			        AllCountries
			    )
			VAR CheckSlicerSelection =
			    IF(
			        Country IN VALUES(DIM_City[Country]),
			        ResultPct,
			        BLANK()
			    )
			RETURN
			    CheckSlicerSelection
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Country
		lineageTag: 4d39bb4f-478a-4345-b92d-24542676a622

	measure 'Current Employees Male %' =
			
			// VAR AllEmployees =
			//     CALCULATE(
			//         [Old_Working Employees],
			//         ALL(DIM_Gender)
			//     )
			// VAR FilteredEmployees =
			//     CALCULATE(
			//         [Old_Working Employees],
			//         DIM_Gender[Gender] = "Male"
			//     )
			VAR AllEmployees =
			    CALCULATE(
			        [Employees End of Period],
			        ALL(DIM_Gender)
			    )
			VAR FilteredEmployees =
			    CALCULATE(
			        [Employees End of Period],
			        DIM_Gender[Gender] = "Male"
			    )
			VAR ResultPct =
			    DIVIDE(
			        FilteredEmployees,
			        AllEmployees
			    )
			VAR Filters =
			    SWITCH(
			        TRUE(),
			        SELECTEDVALUE(DIM_Gender[Gender]) = "Male", 1,
			        SELECTEDVALUE(DIM_Gender[Gender]) = "Female" || ISBLANK(ResultPct), "--",
			        ResultPct
			    )
			RETURN
			    Filters
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Gender
		lineageTag: 3358c7e8-e55b-4083-91a5-a9108806ac40

	measure 'Current Employees Female %' =
			
			// VAR AllEmployees =
			//     CALCULATE(
			//         [Old_Working Employees],
			//         ALL(DIM_Gender)
			//     )
			// VAR FilteredEmployees =
			//     CALCULATE(
			//         [Old_Working Employees],
			//         DIM_Gender[Gender] = "Female"
			//     )
			VAR AllEmployees =
			    CALCULATE(
			        [Employees End of Period],
			        ALL(DIM_Gender)
			    )
			VAR FilteredEmployees =
			    CALCULATE(
			        [Employees End of Period],
			        DIM_Gender[Gender] = "Female"
			    )
			VAR ResultPct =
			    DIVIDE(
			        FilteredEmployees,
			        AllEmployees
			    )
			VAR Filters =
			    SWITCH(
			        TRUE(),
			        SELECTEDVALUE(DIM_Gender[Gender]) = "Female", 1,
			        SELECTEDVALUE(DIM_Gender[Gender]) = "Male" || ISBLANK(ResultPct), "--",
			        ResultPct
			    )
			RETURN
			    Filters
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Gender
		lineageTag: 329de0d2-052a-4f2f-b379-57aea9fe981b

	measure 'Retention Rate' =
			
			SWITCH(
			    TRUE(),
			    [Turnover Rate] > 1, 0, -- set retention rate to 0 when turnover > 1
			    CALCULATE(1 - [Turnover Rate])
			)
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Retention & Turnover
		lineageTag: e46db803-7be0-44fb-a910-9eee91c0a9d5

		annotation __PBI_SemanticLinks = [{"LinkTarget":{"TableName":"DIM_Job Title","TableItemName":"Job Title (clusters)","ObjectType":4},"LinkType":"UsedInGroup"}]

	measure 'Employees % <30' =
			
			VAR AgeGroup = "<30"
			VAR AllEmployees =
			    CALCULATE(
			        --[Old_Working Employees],
			        [Employees End of Period],
			        ALLSELECTED('DIM_Age Group')
			    )
			VAR AgeGroupMeasure =
			    CALCULATE(
			        --[Old_Working Employees],
			        [Employees End of Period],
			        'DIM_Age Group'[Age Group] = "<30"
			    )
			VAR ResultPct =
			    DIVIDE(
			        AgeGroupMeasure,
			        AllEmployees
			    )
			VAR CheckSlicerSelection =
			    IF(
			        AgeGroup IN VALUES('DIM_Age Group'[Age Group]),
			        ResultPct,
			        BLANK()
			    )
			RETURN
			    CheckSlicerSelection
		formatString: 0%;-0%;0%
		displayFolder: Age Group
		lineageTag: 7d741e14-622c-4618-9773-3d866ca42a19

	measure 'Employees % 30_39' =
			
			VAR AgeGroup = "30-39"
			VAR AllEmployees =
			    CALCULATE(
			        --[Old_Working Employees],
			        [Employees End of Period],
			        ALLSELECTED('DIM_Age Group')
			    )
			VAR AgeGroupMeasure =
			    CALCULATE(
			        --[Old_Working Employees],
			        [Employees End of Period],
			        'DIM_Age Group'[Age Group] = "30-39"
			    )
			VAR ResultPct =
			    DIVIDE(
			        AgeGroupMeasure,
			        AllEmployees
			    )
			VAR CheckSlicerSelection =
			    IF(
			        AgeGroup IN VALUES('DIM_Age Group'[Age Group]),
			        ResultPct,
			        BLANK()
			    )
			RETURN
			    CheckSlicerSelection
		formatString: 0%;-0%;0%
		displayFolder: Age Group
		lineageTag: e23cc7d8-d553-4a42-9fe6-cb659b87d0bc

	measure 'Employees % 40_49' =
			
			VAR AgeGroup = "40-49"
			VAR AllEmployees =
			    CALCULATE(
			        --[Old_Working Employees],
			        [Employees End of Period],
			        ALLSELECTED('DIM_Age Group')
			    )
			VAR AgeGroupMeasure =
			    CALCULATE(
			        --[Old_Working Employees],
			        [Employees End of Period],
			        'DIM_Age Group'[Age Group] = "40-49"
			    )
			VAR ResultPct =
			    DIVIDE(
			        AgeGroupMeasure,
			        AllEmployees
			    )
			VAR CheckSlicerSelection =
			    IF(
			        AgeGroup IN VALUES('DIM_Age Group'[Age Group]),
			        ResultPct,
			        BLANK()
			    )
			RETURN
			    CheckSlicerSelection
		formatString: 0%;-0%;0%
		displayFolder: Age Group
		lineageTag: 63eea4b9-fbb2-40a8-a8e3-ee36f5625331

	measure 'Employees % 50_59' =
			
			VAR AgeGroup = "50-59"
			VAR AllEmployees =
			    CALCULATE(
			        --[Old_Working Employees],
			        [Employees End of Period],
			        ALLSELECTED('DIM_Age Group')
			    )
			VAR AgeGroupMeasure =
			    CALCULATE(
			        --[Old_Working Employees],
			        [Employees End of Period],
			        'DIM_Age Group'[Age Group] = "50-59"
			    )
			VAR ResultPct =
			    DIVIDE(
			        AgeGroupMeasure,
			        AllEmployees
			    )
			VAR CheckSlicerSelection =
			    IF(
			        AgeGroup IN VALUES('DIM_Age Group'[Age Group]),
			        ResultPct,
			        BLANK()
			    )
			RETURN
			    CheckSlicerSelection
		formatString: 0%;-0%;0%
		displayFolder: Age Group
		lineageTag: ccf4a5f6-eb06-45b3-9f0e-5ab63e6ebb67

	measure 'Employees % >60' =
			
			VAR AgeGroup = ">60"
			VAR AllEmployees =
			    CALCULATE(
			        --[Old_Working Employees],
			        [Employees End of Period],
			        ALLSELECTED('DIM_Age Group')
			    )
			VAR AgeGroupMeasure =
			    CALCULATE(
			        --[Old_Working Employees],
			        [Employees End of Period],
			        'DIM_Age Group'[Age Group] = ">60"
			    )
			VAR ResultPct =
			    DIVIDE(
			        AgeGroupMeasure,
			        AllEmployees
			    )
			VAR CheckSlicerSelection =
			    IF(
			        AgeGroup IN VALUES('DIM_Age Group'[Age Group]),
			        ResultPct,
			        BLANK()
			    )
			RETURN
			    CheckSlicerSelection
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Age Group
		lineageTag: bf1bd1b7-4566-46b0-b746-a994d5d87223

	measure MaxYAxis_Scatter = ```
			
			VAR SelectedParameter = 
			    SELECTEDVALUE('Area_Resource Level'[Fields])
			VAR RR_JobTitle_Groups =
			    SUMMARIZECOLUMNS(
			        'DIM_Job Title'[Job Title],
			        "Average Annual Salary", [Average Annual Salary]
			    )
			VAR RR_JobLevel_Groups =
			    SUMMARIZECOLUMNS(
			        'DIM_Job Title'[Job Level],
			        "Average Annual Salary", [Average Annual Salary]
			    )
			VAR RR_Deparment_Groups =
			    SUMMARIZECOLUMNS(
			        DIM_Department[Department],
			        "Average Annual Salary", [Average Annual Salary]
			    )
			VAR RR_BusinessUnit_Groups =
			    SUMMARIZECOLUMNS(
			        'DIM_Business Unit'[Business Unit],
			        "Average Annual Salary", [Average Annual Salary]
			    )
			VAR SwitchSlicer =
			    SWITCH(
			        TRUE(),
			        SelectedParameter = "'DIM_Job Title'[Job Title]", 
			                    CALCULATE(
			                        MAXX(
			                            RR_JobTitle_Groups,
			                            [Average Annual Salary]
			                        )
			                    ),
			        SelectedParameter = "'DIM_Job Title'[Job Level]", 
			                    CALCULATE(
			                        MAXX(
			                            RR_JobLevel_Groups,
			                            [Average Annual Salary]
			                        )
			                    ),
			        SelectedParameter = "'DIM_Department'[Department]", 
			                    CALCULATE(
			                        MAXX(
			                            RR_Deparment_Groups,
			                            [Average Annual Salary]
			                        )
			                    ),
			        SelectedParameter = "'DIM_Business Unit'[Business Unit]", 
			                    CALCULATE(
			                        MAXX(
			                            RR_BusinessUnit_Groups,
			                            [Average Annual Salary]
			                        )
			                    )
			    )
			VAR FinalValue = 
			    SwitchSlicer + 15000
			RETURN
			    FinalValue
			
			```
		displayFolder: Correlation Scatterplot
		lineageTag: 6acde4d5-9658-42bd-a623-05d95e1eb345

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure ExtendLimitLowerX = ```
			
			VAR ExtendLimit = -1500
			VAR SelectedParameter = SELECTEDVALUE('Area_Resource Level'[Fields])
			VAR MinValue =
			    SWITCH(
			        TRUE(),
			        SelectedParameter = "'DIM_Job Title'[Job Title]",
			            VAR SalaryGroup =
			            SUMMARIZECOLUMNS(
			                'DIM_Job Title'[Job Title],
			                "Average Annual Salary", [Average Annual Salary Exit]
			            )
			            VAR CalcMinValue =
			                CALCULATE(
			                    MINX(
			                        SalaryGroup,
			                        [Average Annual Salary Exit]
			                    )
			                )
			            RETURN CalcMinValue,
			        SelectedParameter = "'DIM_Job Title'[Job Level]", 
			            VAR SalaryGroup =
			            SUMMARIZECOLUMNS(
			                'DIM_Job Title'[Job Level],
			                "Average Annual Salary", [Average Annual Salary Exit]
			            )
			            VAR CalcMinValue =
			                CALCULATE(
			                    MINX(
			                        SalaryGroup,
			                        [Average Annual Salary Exit]
			                    )
			                )
			            RETURN CalcMinValue,
			        SelectedParameter = "'DIM_Department'[Department]", 
			            VAR SalaryGroup =
			            SUMMARIZECOLUMNS(
			                'DIM_Department'[Department],
			                "Average Annual Salary", [Average Annual Salary Exit]
			            )
			            VAR CalcMinValue =
			                CALCULATE(
			                    MINX(
			                        SalaryGroup,
			                        [Average Annual Salary Exit]
			                    )
			                )
			            RETURN CalcMinValue,
			        --SelectedParameter = "'DIM_Business Unit'[Business Unit]", 
			            VAR SalaryGroup =
			            SUMMARIZECOLUMNS(
			                'DIM_Business Unit'[Business Unit],
			                "Average Annual Salary", [Average Annual Salary Exit]
			            )
			            VAR CalcMinValue =
			                CALCULATE(
			                    MINX(
			                        SalaryGroup,
			                        [Average Annual Salary Exit]
			                    )
			                )
			            RETURN CalcMinValue
			    )
			VAR FinalValue = MinValue + ExtendLimit 
			RETURN
			    FinalValue
			
			```
		displayFolder: Correlation Scatterplot
		lineageTag: 5d793527-5fb1-4952-b749-9994e1763377

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Average Annual Salary Exit' = ```
			
			VAR SalaryMeasure =
			    CALCULATE(
			        AVERAGE(FACT_Employees[Annual Salary]),
			        USERELATIONSHIP(
			            FACT_Employees[Exit Date],
			            DIM_Date[Date]
			        )
			    )
			
			VAR SelectedArea = SELECTEDVALUE('Area_Resource Level'[Area_Resource Level])
			
			VAR SwitchAreaLevel =
			    SWITCH(
			        TRUE(),
			        SelectedArea = "Business Unit", 
			                IF(
			                    HASONEVALUE('DIM_Business Unit'[Business Unit]),
			                    SalaryMeasure,
			                    BLANK()
			                ),
			        SelectedArea = "Department", 
			                IF(
			                    HASONEVALUE(DIM_Department[Department]),
			                    SalaryMeasure,
			                    BLANK()
			                ),
			        SelectedArea = "Job Level", 
			                IF(
			                    HASONEVALUE('DIM_Job Title'[Job Level]),
			                    SalaryMeasure,
			                    BLANK()
			                ),
			        SelectedArea = "Job Title", 
			                IF(
			                    HASONEVALUE('DIM_Job Title'[Job Title]),
			                    SalaryMeasure,
			                    BLANK()
			                )
			    )
			
			RETURN SalaryMeasure
			```
		formatString: \$#,0;(\$#,0);\$#,0
		displayFolder: Salary
		lineageTag: c39dbc9e-236e-47fc-9ed6-efb900b0af55

	measure 'Retention Rate Growth' = ```
			
			
			IF(
			    HASONEVALUE(DIM_Date[Year]),
			    VAR PreviousYearRetentionRate =
			        CALCULATE(
			            [Retention Rate],
			            PREVIOUSYEAR(DIM_Date[Date])
			        )
			    
			    VAR Delta = ROUND(100*([Retention Rate] - PreviousYearRetentionRate),2)
			    RETURN Delta,
			    BLANK()
			)
			```
		displayFolder: Retention & Turnover
		lineageTag: ad4d1c91-4021-498c-bc98-abe714a8a1a8

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Turnover Growth' = ```
			
			
			IF(
			    HASONEVALUE(DIM_Date[Year]),
			    VAR PreviousYearTurnoverRate =
			        CALCULATE(
			            [Turnover Rate],
			            PREVIOUSYEAR(DIM_Date[Date])
			        )
			    
			    VAR Delta = ROUND(100*([Turnover Rate] - PreviousYearTurnoverRate),2)
			    RETURN Delta,
			    BLANK()
			)
			```
		displayFolder: Retention & Turnover
		lineageTag: 509c99b8-ece6-4efb-83b8-5ca7d2144848

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Employees Left Growth %' = ```
			
			
			IF(
			    HASONEVALUE(DIM_Date[Year]),  
			    VAR PreviousYearExit =
			        CALCULATE(
			            [Employees Left in Period],
			            PREVIOUSYEAR(DIM_Date[Date])
			            // DATEADD(
			            //     DIM_Date[Date],
			            //     -1,
			            //     YEAR
			            // )
			        )
			    VAR ResultPct =   
			        DIVIDE(
			            [Employees Left in Period],
			            PreviousYearExit
			        ) - 1
			    RETURN ResultPct,
			    BLANK()
			)
			```
		displayFolder: Retention & Turnover
		lineageTag: a4456f13-e13c-4e0c-9c26-5104814f78f4

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Icon Turnover Growth' = ```
			
			VAR Mstatus = 
			    SWITCH(
			        TRUE(),
			        [Turnover Growth] < 0, "Positive Down",
			        [Turnover Growth] > 0, "Negative Up",
			        BLANK()
			    )
			
			VAR Image = 
			    LOOKUPVALUE(
			        'Icon Growth %'[Img],
			        'Icon Growth %'[Status],
			        Mstatus
			    )
			
			RETURN Image
			```
		displayFolder: Retention & Turnover
		lineageTag: bfaaa49b-8fe3-4b38-aa22-7a13cb9a1131

	measure 'Icon Retention Rate Growth' = ```
			
			VAR Mstatus = 
			    SWITCH(
			        TRUE(),
			        [Retention Rate Growth] > 0, "Positive Up",
			        [Retention Rate Growth] < 0, "Negative Down",
			        BLANK()
			    )
			
			VAR Image = 
			    LOOKUPVALUE(
			        'Icon Growth %'[Img],
			        'Icon Growth %'[Status],
			        Mstatus
			    )
			
			RETURN Image
			```
		displayFolder: Retention & Turnover
		lineageTag: 543f031c-f19c-4d4c-b273-7d65d6c7af73

	measure 'Icon Employees Left Growth' = ```
			
			VAR Mstatus = 
			    SWITCH(
			        TRUE(),
			        [Employees Left Growth %] < 0, "Positive Down",
			        [Employees Left Growth %] > 0, "Negative Up",
			        BLANK()
			    )
			
			VAR Image = 
			    LOOKUPVALUE(
			        'Icon Growth %'[Img],
			        'Icon Growth %'[Status],
			        Mstatus
			    )
			
			RETURN Image
			```
		displayFolder: Retention & Turnover
		lineageTag: 31b5f717-6673-44e3-8712-2483a7f20fd3

	measure 'Format Turnover Growth' =
			
			IF(
			    ISBLANK([Turnover Growth]),
			    --"from " & YEAR(MIN(DIM_Date[Date])) & " to " & YEAR(MAX(DIM_Date[Date])),
			    YEAR(MIN(DIM_Date[Date])) & " - " & YEAR(MAX(DIM_Date[Date])),
			    FORMAT([Turnover Growth], "+0.00;-0.00")
			)
		displayFolder: Retention & Turnover
		lineageTag: db129989-6150-495e-9f66-100bb936391c

	measure 'Format Add Label' =
			
			IF(
			    HASONEVALUE(DIM_Date[Year]),
			    "compared to " & SELECTEDVALUE(DIM_Date[Year]) - 1,
			    BLANK()
			)
		displayFolder: Retention & Turnover
		lineageTag: da5cc456-f0b7-4951-b852-ac39f65c4650

	measure 'Format Retention Growth' =
			
			IF(
			    ISBLANK([Retention Rate Growth]),
			    --"from " & YEAR(MIN(DIM_Date[Date])) & " to " & YEAR(MAX(DIM_Date[Date])),
			    YEAR(MIN(DIM_Date[Date])) & " - " & YEAR(MAX(DIM_Date[Date])),
			    FORMAT([Retention Rate Growth], "+0.00;-0.00")
			)
		displayFolder: Retention & Turnover
		lineageTag: 9010856c-2596-4fc0-8625-38963a49cd88

	measure 'Format Employees Left Growth %' =
			
			IF(
			    ISBLANK([Employees Left Growth %]),
			    --"from " & YEAR(MIN(DIM_Date[Date])) & " to " & YEAR(MAX(DIM_Date[Date])),
			    YEAR(MIN(DIM_Date[Date])) & " - " & YEAR(MAX(DIM_Date[Date])),
			    FORMAT([Employees Left Growth %], "+0.0%;-0.0%")
			)
		displayFolder: Retention & Turnover
		lineageTag: fa31971d-4681-42cf-9e2a-a8dad3d2ec86

	measure 'Turnover Label' =
			
			VAR SelectedYear = SELECTEDVALUE(DIM_Date[Year])
			--VAR CurrentYear = MAX(DIM_Date[Year])
			VAR CurrentYear = YEAR(MAX(FACT_Employees[Hire Date]))
			VAR DisplayLabel =
			    IF(
			        CurrentYear = SelectedYear || CurrentYear = SelectedYear - 1,
			        [Turnover Rate],
			        BLANK()
			    )
			RETURN DisplayLabel
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Retention & Turnover
		lineageTag: 8be60a77-8444-4b35-9a78-98eb3267e684

	measure ExtendLimitUpperX = ```
			
			VAR ExtendLimit = 1000
			VAR SelectedParameter = SELECTEDVALUE('Area_Resource Level'[Fields])
			VAR MaxValue =
			    SWITCH(
			        TRUE(),
			        SelectedParameter = "'DIM_Job Title'[Job Title]",
			            VAR SalaryGroup =
			            SUMMARIZECOLUMNS(
			                'DIM_Job Title'[Job Title],
			                "Average Annual Salary", [Average Annual Salary Exit]
			            )
			            VAR CalcMaxValue =
			                CALCULATE(
			                    MAXX(
			                        SalaryGroup,
			                        [Average Annual Salary Exit]
			                    )
			                )
			            RETURN CalcMaxValue,
			        SelectedParameter = "'DIM_Job Title'[Job Level]", 
			            VAR SalaryGroup =
			            SUMMARIZECOLUMNS(
			                'DIM_Job Title'[Job Level],
			                "Average Annual Salary", [Average Annual Salary Exit]
			            )
			            VAR CalcMaxValue =
			                CALCULATE(
			                    MAXX(
			                        SalaryGroup,
			                        [Average Annual Salary Exit]
			                    )
			                )
			            RETURN CalcMaxValue,
			        SelectedParameter = "'DIM_Department'[Department]", 
			            VAR SalaryGroup =
			            SUMMARIZECOLUMNS(
			                'DIM_Department'[Department],
			                "Average Annual Salary", [Average Annual Salary Exit]
			            )
			            VAR CalcMaxValue =
			                CALCULATE(
			                    MAXX(
			                        SalaryGroup,
			                        [Average Annual Salary Exit]
			                    )
			                )
			            RETURN CalcMaxValue,
			        --SelectedParameter = "'DIM_Business Unit'[Business Unit]", 
			            VAR SalaryGroup =
			            SUMMARIZECOLUMNS(
			                'DIM_Business Unit'[Business Unit],
			                "Average Annual Salary", [Average Annual Salary Exit]
			            )
			            VAR CalcMaxValue =
			                CALCULATE(
			                    MAXX(
			                        SalaryGroup,
			                        [Average Annual Salary Exit]
			                    )
			                )
			            RETURN CalcMaxValue
			    )
			VAR FinalValue = MaxValue + ExtendLimit 
			RETURN
			    FinalValue
			
			```
		displayFolder: Correlation Scatterplot
		lineageTag: 450719b2-b319-4ac8-bf46-825a77fe767d

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure ExtendLimitLowerY = ```
			
			VAR ExtendLimit = -0.02
			VAR SelectedParameter = SELECTEDVALUE('Area_Resource Level'[Fields])
			VAR MinValue =
			    SWITCH(
			        TRUE(),
			        SelectedParameter = "'DIM_Job Title'[Job Title]",
			            VAR RetentionRateGroup =
			            SUMMARIZECOLUMNS(
			                'DIM_Job Title'[Job Title],
			                "Retention Rate", [Retention Rate]
			            )
			            VAR CalcMinValue =
			                CALCULATE(
			                    MINX(
			                        RetentionRateGroup,
			                        [Retention Rate]
			                    )
			                )
			            RETURN CalcMinValue,
			        SelectedParameter = "'DIM_Job Title'[Job Level]", 
			            VAR RetentionRateGroup =
			            SUMMARIZECOLUMNS(
			                'DIM_Job Title'[Job Level],
			                "Retention Rate", [Retention Rate]
			            )
			            VAR CalcMinValue =
			                CALCULATE(
			                    MINX(
			                        RetentionRateGroup,
			                        [Retention Rate]
			                    )
			                )
			            RETURN CalcMinValue,
			        SelectedParameter = "'DIM_Department'[Department]", 
			            VAR RetentionRateGroup =
			            SUMMARIZECOLUMNS(
			                'DIM_Department'[Department],
			                "Retention Rate", [Retention Rate]
			            )
			            VAR CalcMinValue =
			                CALCULATE(
			                    MINX(
			                        RetentionRateGroup,
			                        [Retention Rate]
			                    )
			                )
			            RETURN CalcMinValue,
			        --SelectedParameter = "'DIM_Business Unit'[Business Unit]", 
			            VAR RetentionRateGroup =
			            SUMMARIZECOLUMNS(
			                'DIM_Business Unit'[Business Unit],
			                "Retention Rate", [Retention Rate]
			            )
			            VAR CalcMinValue =
			                CALCULATE(
			                    MINX(
			                        RetentionRateGroup,
			                        [Retention Rate]
			                    )
			                )
			            RETURN CalcMinValue
			    )
			VAR FinalValue = MinValue + ExtendLimit 
			RETURN
			    FinalValue
			
			```
		displayFolder: Correlation Scatterplot
		lineageTag: e18900a0-b41f-4d5b-bad7-6f87e5b3cb86

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure ExtendLimitUpperY = ```
			
			VAR ExtendLimit = 0.02
			VAR SelectedParameter = SELECTEDVALUE('Area_Resource Level'[Fields])
			VAR MaxValue =
			    SWITCH(
			        TRUE(),
			        SelectedParameter = "'DIM_Job Title'[Job Title]",
			            VAR RetentionRateGroup =
			            SUMMARIZECOLUMNS(
			                'DIM_Job Title'[Job Title],
			                "Retention Rate", [Retention Rate]
			            )
			            VAR CalcMaxValue =
			                CALCULATE(
			                    MAXX(
			                        RetentionRateGroup,
			                        [Retention Rate]
			                    )
			                )
			            RETURN CalcMaxValue,
			        SelectedParameter = "'DIM_Job Title'[Job Level]", 
			            VAR RetentionRateGroup =
			            SUMMARIZECOLUMNS(
			                'DIM_Job Title'[Job Level],
			                "Retention Rate", [Retention Rate]
			            )
			            VAR CalcMaxValue =
			                CALCULATE(
			                    MAXX(
			                        RetentionRateGroup,
			                        [Retention Rate]
			                    )
			                )
			            RETURN CalcMaxValue,
			        SelectedParameter = "'DIM_Department'[Department]", 
			            VAR RetentionRateGroup =
			            SUMMARIZECOLUMNS(
			                'DIM_Department'[Department],
			                "Retention Rate", [Retention Rate]
			            )
			            VAR CalcMaxValue =
			                CALCULATE(
			                    MAXX(
			                        RetentionRateGroup,
			                        [Retention Rate]
			                    )
			                )
			            RETURN CalcMaxValue,
			        --SelectedParameter = "'DIM_Business Unit'[Business Unit]", 
			            VAR RetentionRateGroup =
			            SUMMARIZECOLUMNS(
			                'DIM_Business Unit'[Business Unit],
			                "Retention Rate", [Retention Rate]
			            )
			            VAR CalcMaxValue =
			                CALCULATE(
			                    MAXX(
			                        RetentionRateGroup,
			                        [Retention Rate]
			                    )
			                )
			            RETURN CalcMaxValue
			    )
			VAR FinalValue = MaxValue + ExtendLimit 
			RETURN
			    FinalValue
			
			```
		displayFolder: Correlation Scatterplot
		lineageTag: 3534a272-41e3-4890-91be-b48f0980806d

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Highest Annual Salary' = ```
			
			VAR MaxDate = MAX(DIM_Date[Date])
			VAR MedianSalaryWorkingEmployees =
			    CALCULATE(
			        MAX(FACT_Employees[Annual Salary]),
			        FACT_Employees[Hire Date] <= MaxDate,
			        FACT_Employees[Exit Date] > MaxDate || ISBLANK(FACT_Employees[Exit Date]),
			        USERELATIONSHIP(
			            FACT_Employees[Exit Date],
			            DIM_Date[Date]
			        ), 
			        ALL(DIM_Date) -- without it the earliest hire or exit dates would lie within the period, but we need to check hire date before and exit date after (row 4-5) and compare to the earliest date of the period MIN(DIM_Date[Date]).
			    )
			RETURN MedianSalaryWorkingEmployees
			```
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############
		displayFolder: Salary
		lineageTag: afd10538-2b08-4637-b504-b5668e66c34f

	measure 'Lowest Annual Salary' = ```
			
			VAR MaxDate = MAX(DIM_Date[Date])
			VAR MedianSalaryWorkingEmployees =
			    CALCULATE(
			        MIN(FACT_Employees[Annual Salary]),
			        FACT_Employees[Hire Date] <= MaxDate,
			        FACT_Employees[Exit Date] > MaxDate || ISBLANK(FACT_Employees[Exit Date]),
			        USERELATIONSHIP(
			            FACT_Employees[Exit Date],
			            DIM_Date[Date]
			        ), 
			        ALL(DIM_Date) -- without it the earliest hire or exit dates would lie within the period, but we need to check hire date before and exit date after (row 4-5) and compare to the earliest date of the period MIN(DIM_Date[Date]).
			    )
			RETURN MedianSalaryWorkingEmployees
			```
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############
		displayFolder: Salary
		lineageTag: af5e1bfa-26d7-4f19-ba5b-ba212d10c4eb

	partition Measure = m
		mode: import
		source =
				let
				    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i44FAA==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),
				    #"Changed Type" = Table.TransformColumnTypes(Source,{{"Column1", type text}}),
				    #"Removed Columns" = Table.RemoveColumns(#"Changed Type",{"Column1"})
				in
				    #"Removed Columns"

	annotation PBI_ResultType = Table

	annotation PBI_NavigationStepName = Navigation

	annotation __PBI_SemanticLinks = [{"LinkTarget":{"TableName":"DIM_Job Title","TableItemName":"Job Title (clusters)","ObjectType":4},"LinkType":"UsedInGroup"}]

